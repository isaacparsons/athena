/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface Country {
  code: string;
  id: Generated<number>;
  latitude: number;
  longitude: number;
  name: string;
}

export interface FederatedCredential {
  id: Generated<number>;
  provider: string;
  subjectId: string;
  userId: number;
}

export interface Location {
  countryCode: string | null;
  id: Generated<number>;
  latitude: number | null;
  longitude: number | null;
  name: string | null;
}

export interface Newsletter {
  created: Generated<string>;
  creatorId: number;
  endDate: string | null;
  id: Generated<number>;
  modified: string | null;
  modifierId: number | null;
  name: string;
  ownerId: number;
  startDate: string | null;
}

export interface NewsletterPost {
  created: Generated<string>;
  creatorId: number;
  date: string | null;
  id: Generated<number>;
  locationId: number | null;
  modified: string | null;
  modifierId: number | null;
  newsletterId: number;
  nextId: number | null;
  parentId: number | null;
  prevId: number | null;
  title: string;
}

export interface NewsletterPostContainer {
  id: Generated<number>;
  name: string;
  newsletterPostId: number;
  type: string;
}

export interface NewsletterPostMedia {
  caption: string | null;
  fileName: string;
  format: string;
  id: Generated<number>;
  name: string;
  newsletterPostId: number;
  type: string;
}

export interface NewsletterPostText {
  description: string | null;
  id: Generated<number>;
  link: string | null;
  name: string;
  newsletterPostId: number;
  type: string;
}

export interface User {
  email: string;
  firstName: string | null;
  id: Generated<number>;
  lastName: string | null;
}

export interface UserNewsletter {
  newsletterId: number;
  userId: number;
}

export interface DB {
  country: Country;
  federated_credential: FederatedCredential;
  location: Location;
  newsletter: Newsletter;
  newsletter_post: NewsletterPost;
  newsletter_post_container: NewsletterPostContainer;
  newsletter_post_media: NewsletterPostMedia;
  newsletter_post_text: NewsletterPostText;
  user: User;
  user_newsletter: UserNewsletter;
}
