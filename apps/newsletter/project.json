{
  "name": "newsletter",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/newsletter/src",
  "projectType": "application",
  "tags": [],
  "targets": {
    "build": {
      "executor": "@nx/esbuild:esbuild",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "production",
      "dependsOn": [
        {
          "target": "generate-api",
          "projects": "self"
        }
      ],
      "options": {
        "platform": "node",
        "outputPath": "dist/apps/newsletter",
        "format": ["cjs"],
        "bundle": false,
        "main": "apps/newsletter/src/main.ts",
        "tsConfig": "apps/newsletter/tsconfig.app.json",
        "assets": ["apps/newsletter/src/assets"],
        "generatePackageJson": true,
        "esbuildOptions": {
          "sourcemap": true,
          "outExtension": {
            ".js": ".js"
          }
        }
      },
      "configurations": {
        "development": {},
        "production": {
          "esbuildOptions": {
            "sourcemap": false,
            "outExtension": {
              ".js": ".js"
            }
          }
        }
      }
    },
    "serve": {
      "executor": "@nx/js:node",
      "defaultConfiguration": "development",
      "dependsOn": ["build"],
      "options": {
        "buildTarget": "newsletter:build",
        "runBuildTargetDependencies": false
      },
      "configurations": {
        "development": {
          "buildTarget": "newsletter:build:development"
        },
        "production": {
          "buildTarget": "newsletter:build:production"
        }
      }
    },
    "generate-api": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "tsc -p apps/newsletter/tsconfig.app.json --declaration --outDir types/server"
        ]
      }
    },
    "generate-db": {
      "executor": "nx:run-commands",
      "defaultConfiguration": "development",
      "configurations": {
        "development": {},
        "production": {}
      },
      "options": {
        "commands": [
          "kysely-codegen --env-file apps/newsletter/.env.development.local --out-file ./apps/newsletter/src/types/db.ts"
        ]
      }
    },
    "db-start": {
      "executor": "nx:run-commands",
      "defaultConfiguration": "development",
      "options": {
        "commands": [
          "docker compose -f apps/newsletter/docker-compose.yaml up db -d"
        ]
      },
      "configurations": {
        "development": {},
        "production": {}
      }
    },
    "db-destroy": {
      "executor": "nx:run-commands",
      "defaultConfiguration": "development",
      "options": {
        "commands": ["docker compose -f apps/newsletter/docker-compose.yaml down -v"]
      },
      "configurations": {
        "development": {},
        "production": {}
      }
    },
    "setup-local": {
      "executor": "nx:run-commands",
      "defaultConfiguration": "development",
      "options": {
        "commands": [
          "echo \"APP_HOST=localhost\" > apps/newsletter/.env.development.local",
          "echo \"CLIENT_HOST=localhost\" >> apps/newsletter/.env.development.local"
        ]
      },
      "configurations": {
        "development": {},
        "production": {}
      }
    },
    "db": {
      "executor": "nx:run-commands",
      "configurations": {
        "create-tables": {
          "commands": [
            "npx tsx --tsconfig apps/newsletter/tsconfig.app.json apps/newsletter/src/scripts/create-tables.ts"
          ]
        },
        "seed": {
          "commands": [
            "npx tsx --tsconfig apps/newsletter/tsconfig.app.json apps/newsletter/src/scripts/seed.ts"
          ]
        }
      }
    },
    "configure-gcs-bucket": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "gcloud storage buckets update gs://athena-newsletter --cors-file=./resources/gcs-cors.json"
        ]
      }
    },
    "up": {
      "executor": "nx:run-commands",
      "defaultConfiguration": "development",
      "dependsOn": [
        {
          "target": "build",
          "projects": "self"
        },
        "athena-frontend:build"
      ],
      "options": {
        "commands": [
          "docker-compose -f apps/newsletter/docker-compose.yaml build && docker-compose  -f apps/newsletter/docker-compose.yaml up -d db api"
        ]
      },
      "configurations": {
        "development": {},
        "production": {}
      }
    },
    "down": {
      "executor": "nx:run-commands",
      "defaultConfiguration": "production",
      "options": {
        "commands": ["docker rm -f newsletter-db-1 && docker rm -f newsletter-api-1"]
      }
    }
  }
}
